{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\tabledisplay\\\\src\\\\components\\\\Table\\\\ItemTable\\\\ItemRow\\\\ItemRow.js\";\nimport React, { Component } from \"react\";\nimport classes from \"../../../Button/Button.scss\";\nimport Input from \"../../../Input/Input\";\n\nclass ItemRow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tablerow: {\n        itemname: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"select\",\n              displayValue: \"select an item\"\n            }, {\n              value: \"itemvalue1\",\n              displayValue: \"itemvalue1\"\n            }, {\n              value: \"itemvalue2\",\n              displayValue: \"itemvalue2\"\n            }, {\n              value: \"itemvalue3\",\n              displayValue: \"itemvalue3\"\n            }, {\n              value: \"itemvalue4\",\n              displayValue: \"itemvalue4\"\n            }]\n          }\n        },\n        materialfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        },\n        packingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        },\n        unpackingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        }\n      }\n    };\n\n    this.renderInput = () => {\n      const trowElementsArray = [];\n\n      for (let key in this.state.tablerow) {\n        trowElementsArray.push({\n          id: key,\n          config: this.state.tablerow[key]\n        });\n      }\n\n      let trow = React.createElement(React.Fragment, null, trowElementsArray.map(trowElement => React.createElement(\"td\", {\n        className: classes.td,\n        key: trowElement.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: trowElement.id,\n        elementType: trowElement.config.elementType,\n        elementConfig: trowElement.config.elementConfig,\n        value: trowElement.config.value,\n        onFocus: this.handleFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: i => this.onDelEvent(i),\n        className: \"DelButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.img_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))));\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, trow);\n    };\n  }\n\n  onDelEvent() {\n    this.props.onDelEvent(this.props.item);\n  }\n\n  handleFocus() {\n    const imgs = [{\n      ButtonImg: './images/icon_delete.png'\n    }];\n    this.setState({\n      img_path: imgs.ButtonImg\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.renderInput());\n  }\n\n}\n\nexport default ItemRow;","map":{"version":3,"sources":["C:/ReactJS/tabledisplay/src/components/Table/ItemTable/ItemRow/ItemRow.js"],"names":["React","Component","classes","Input","ItemRow","state","tablerow","itemname","elementType","elementConfig","options","value","displayValue","materialfees","type","placeholder","packingfees","unpackingfees","renderInput","trowElementsArray","key","push","id","config","trow","map","trowElement","td","handleFocus","i","onDelEvent","img_path","props","item","imgs","ButtonImg","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from \"../../../Button/Button.scss\";\r\nimport Input from \"../../../Input/Input\";\r\n\r\nclass ItemRow extends Component {\r\n  state = {\r\n    tablerow: {\r\n      itemname: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n             { value: \"select\", displayValue: \"select an item\" },\r\n            { value: \"itemvalue1\", displayValue: \"itemvalue1\" },\r\n            { value: \"itemvalue2\", displayValue: \"itemvalue2\" },\r\n            { value: \"itemvalue3\", displayValue: \"itemvalue3\" },\r\n            { value: \"itemvalue4\", displayValue: \"itemvalue4\" }\r\n          ]\r\n        },\r\n             },\r\n      materialfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n             },\r\n      packingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n       \r\n      },\r\n      unpackingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n       \r\n      }\r\n    },\r\n     };\r\n\r\n\r\n onDelEvent() {\r\n    this.props.onDelEvent(this.props.item);\r\n    \r\n\r\n  }\r\n handleFocus() {\r\n    const imgs = [{ButtonImg: './images/icon_delete.png'}];\r\n     this.setState({img_path: imgs.ButtonImg});\r\n  }\r\n\r\n  renderInput = () => {\r\n       const trowElementsArray = [];\r\n    for (let key in this.state.tablerow) {\r\n    trowElementsArray.push({\r\n      id: key,\r\n      config: this.state.tablerow[key]\r\n      });\r\n    }\r\n    let trow = (\r\n     <>\r\n        {trowElementsArray.map(trowElement => (\r\n          <td className={classes.td} key={trowElement.id}>\r\n            <Input\r\n              key={trowElement.id}\r\n              elementType={trowElement.config.elementType}\r\n              elementConfig={trowElement.config.elementConfig}\r\n              value={trowElement.config.value}  \r\n             onFocus={this.handleFocus}\r\n            />\r\n          </td>\r\n        ))}\r\n        <td>\r\n        \r\n          <button onClick={i => this.onDelEvent(i)} className=\"DelButton\"><img src={this.state.img_path}></img></button>\r\n        </td>\r\n      </>\r\n    );\r\n    return ( <tr>{trow}</tr>);\r\n  };\r\n  render() {  \r\n    return(<>{this.renderInput()}</>);\r\n  }\r\n}\r\nexport default ItemRow;\r\n"]},"metadata":{},"sourceType":"module"}