{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\tabledisplay\\\\src\\\\components\\\\Table\\\\ItemTable\\\\ItemRow\\\\ItemRow.js\";\nimport React, { Component } from \"react\";\nimport classes from \"../../../Button/Button.css\";\nimport Input from \"../../../Input/Input\";\n\nclass ItemRow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tablerow: {\n        itemname: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"itemvalue1\",\n              displayValue: \"itemvalue1\"\n            }, {\n              value: \"itemvalue2\",\n              displayValue: \"itemvalue2\"\n            }, {\n              value: \"itemvalue3\",\n              displayValue: \"itemvalue3\"\n            }, {\n              value: \"itemvalue4\",\n              displayValue: \"itemvalue4\"\n            }]\n          }\n        },\n        materialfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        },\n        packingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        },\n        unpackingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          }\n        }\n      }\n    };\n\n    this.renderInput = () => {\n      const trowElementsArray = [];\n\n      for (let key in this.state.tablerow) {\n        trowElementsArray.push({\n          id: key,\n          config: this.state.tablerow[key]\n        });\n      }\n\n      trowElementsArray.map(trowElement => {\n        return trowElement.config.elementType === 'Input' ? React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"am heading\") : React.createElement(\"td\", {\n          className: classes.td,\n          key: trowElement.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Input, {\n          key: trowElement.id,\n          elementType: trowElement.config.elementType,\n          elementConfig: trowElement.config.elementConfig,\n          value: trowElement.config.value,\n          autoFocus: true,\n          prefix: \"$\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      });\n    };\n  }\n\n  onDelEvent() {\n    this.props.onDelEvent(this.props.item);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.renderInput());\n  }\n\n}\n\nexport default ItemRow;","map":{"version":3,"sources":["C:/ReactJS/tabledisplay/src/components/Table/ItemTable/ItemRow/ItemRow.js"],"names":["React","Component","classes","Input","ItemRow","state","tablerow","itemname","elementType","elementConfig","options","value","displayValue","materialfees","type","placeholder","packingfees","unpackingfees","renderInput","trowElementsArray","key","push","id","config","map","trowElement","td","onDelEvent","props","item","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from \"../../../Button/Button.css\";\r\nimport Input from \"../../../Input/Input\";\r\n\r\nclass ItemRow extends Component {\r\n  state = {\r\n    tablerow: {\r\n      itemname: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"itemvalue1\", displayValue: \"itemvalue1\" },\r\n            { value: \"itemvalue2\", displayValue: \"itemvalue2\" },\r\n            { value: \"itemvalue3\", displayValue: \"itemvalue3\" },\r\n            { value: \"itemvalue4\", displayValue: \"itemvalue4\" }\r\n          ]\r\n        },\r\n             },\r\n      materialfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n             },\r\n      packingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n       \r\n      },\r\n      unpackingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n       \r\n      }\r\n    },\r\n     };\r\n\r\n\r\n onDelEvent() {\r\n    this.props.onDelEvent(this.props.item);\r\n\r\n  }\r\n\r\n  renderInput = () => {\r\n   const trowElementsArray = [];\r\n    for (let key in this.state.tablerow) {\r\n    trowElementsArray.push({\r\n      id: key,\r\n      config: this.state.tablerow[key]\r\n      });\r\n    }\r\n   trowElementsArray.map(trowElement => {\r\n  return (trowElement.config.elementType==='Input')?<h1>am heading</h1>:\r\n <td className={classes.td} key={trowElement.id}>\r\n            <Input\r\n              key={trowElement.id}\r\n              elementType={trowElement.config.elementType}\r\n              elementConfig={trowElement.config.elementConfig}\r\n              value={trowElement.config.value}  \r\n               autoFocus \r\n               prefix=\"$\"     \r\n            />\r\n          </td>\r\n   } )\r\n   \r\n \r\n  };\r\n  render() {  \r\n    return(<>{this.renderInput()}</>);\r\n  }\r\n}\r\nexport default ItemRow;\r\n"]},"metadata":{},"sourceType":"module"}