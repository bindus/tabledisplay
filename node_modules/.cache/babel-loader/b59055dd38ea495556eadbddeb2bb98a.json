{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\tabledisplay\\\\src\\\\components\\\\Table\\\\ItemRow\\\\ItemRow.js\";\nimport React, { Component } from \"react\";\nimport classes from \"../../Button/Button.css\";\nimport Input from \"../../../Input/Input\";\n\nclass ItemRow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tablerow: {\n        itemname: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"itemvalue1\",\n              displayValue: \"itemvalue1\"\n            }, {\n              value: \"itemvalue2\",\n              displayValue: \"itemvalue2\"\n            }, {\n              value: \"itemvalue3\",\n              displayValue: \"itemvalue3\"\n            }, {\n              value: \"itemvalue4\",\n              displayValue: \"itemvalue4\"\n            }]\n          },\n          value: \"\",\n          validation: {},\n          valid: true\n        },\n        materialfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        packingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        },\n        unpackingfees: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"0\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      trowIsValid: false,\n      loading: false\n    };\n\n    this.renderInput = () => {};\n  }\n\n  render() {\n    const trowElementsArray = [];\n\n    for (let key in this.state.tablerow) {\n      trowElementsArray.push({\n        id: key,\n        config: this.state.tablerow[key]\n      });\n    }\n\n    let trow = React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, trowElementsArray.map(trowElement => React.createElement(\"td\", {\n      className: classes.td,\n      key: trowElement.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Input, {\n      key: trowElement.id,\n      elementType: trowElement.config.elementType,\n      elementConfig: trowElement.config.elementConfig,\n      value: trowElement.config.value,\n      invalid: !trowElement.config.valid,\n      shouldValidate: trowElement.config.validation,\n      touched: trowElement.config.touched,\n      changed: event => this.inputChangedHandler(event, trowElement.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \" \")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: event => this.removeRow(event, trow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"X\")));\n    return React.createElement(React.Fragment, null, trow);\n  }\n\n}\n\nexport default ItemRow;","map":{"version":3,"sources":["C:/ReactJS/tabledisplay/src/components/Table/ItemRow/ItemRow.js"],"names":["React","Component","classes","Input","ItemRow","state","tablerow","itemname","elementType","elementConfig","options","value","displayValue","validation","valid","materialfees","type","placeholder","required","touched","packingfees","minLength","maxLength","isNumeric","unpackingfees","trowIsValid","loading","renderInput","render","trowElementsArray","key","push","id","config","trow","map","trowElement","td","event","inputChangedHandler","removeRow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from \"../../Button/Button.css\";\r\nimport Input from \"../../../Input/Input\";\r\n\r\nclass ItemRow extends Component {\r\n  state = {\r\n    tablerow: {\r\n      itemname: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"itemvalue1\", displayValue: \"itemvalue1\" },\r\n            { value: \"itemvalue2\", displayValue: \"itemvalue2\" },\r\n            { value: \"itemvalue3\", displayValue: \"itemvalue3\" },\r\n            { value: \"itemvalue4\", displayValue: \"itemvalue4\" }\r\n          ]\r\n        },\r\n        value: \"\",\r\n        validation: {},\r\n        valid: true\r\n      },\r\n      materialfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      packingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      unpackingfees: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"0\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    trowIsValid: false,\r\n    loading: false\r\n  };\r\n\r\n  renderInput = () => {\r\n      \r\n  }\r\n\r\n  render() {\r\n    const trowElementsArray = [];\r\n    for (let key in this.state.tablerow) {\r\n      trowElementsArray.push({\r\n        id: key,\r\n        config: this.state.tablerow[key]\r\n      });\r\n    }\r\n    let trow = (\r\n      <tr>\r\n        {trowElementsArray.map(trowElement => (\r\n          <td className={classes.td} key={trowElement.id}>\r\n            <Input\r\n              key={trowElement.id}\r\n              elementType={trowElement.config.elementType}\r\n              elementConfig={trowElement.config.elementConfig}\r\n              value={trowElement.config.value}\r\n              invalid={!trowElement.config.valid}\r\n              shouldValidate={trowElement.config.validation}\r\n              touched={trowElement.config.touched}\r\n              changed={event => this.inputChangedHandler(event, trowElement.id)}\r\n            />{\" \"}\r\n          </td>\r\n        ))}\r\n        <td>\r\n          <button onClick={event => this.removeRow(event, trow)}>X</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n    return <>{trow}</>;\r\n  }\r\n}\r\nexport default ItemRow;\r\n"]},"metadata":{},"sourceType":"module"}