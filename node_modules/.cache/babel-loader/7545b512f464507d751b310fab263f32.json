{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\tabledisplay\\\\src\\\\components\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, props.elementConfig.options.map(option => React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, option.displayValue)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["C:/ReactJS/tabledisplay/src/components/Input/Input.js"],"names":["React","classes","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","elementConfig","value","changed","join","options","map","option","displayValue","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AAEA,MAAIH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,cAAvB,IAAyCL,KAAK,CAACM,OAAnD,EAA4D;AACxDJ,IAAAA,YAAY,CAACK,IAAb,CAAkBT,OAAO,CAACU,OAA1B;AACH;;AAED,UAASR,KAAK,CAACS,WAAf;AACI,SAAO,OAAP;AACIR,MAAAA,YAAY,GAAG,+CACRD,KAAK,CAACU,aADE;AAEX,QAAA,KAAK,EAAEV,KAAK,CAACW,KAFF;AAGX,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;;AAEJ,SAAO,QAAP;AACIX,MAAAA,YAAY,GACR;AACI,QAAA,SAAS,EAAEC,YAAY,CAACW,IAAb,CAAkB,GAAlB,CADf;AAEI,QAAA,KAAK,EAAEb,KAAK,CAACW,KAFjB;AAGI,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKZ,KAAK,CAACU,aAAN,CAAoBI,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IACnC;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACL,KAApB;AAA2B,QAAA,KAAK,EAAEK,MAAM,CAACL,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,MAAM,CAACC,YADZ,CADH,CAJL,CADJ;AAYA;;AACJ;AACIhB,MAAAA,YAAY,GAAG,+CACPD,KAAK,CAACU,aADC;AAEX,QAAA,KAAK,EAAEV,KAAK,CAACW,KAFF;AAGX,QAAA,QAAQ,EAAEX,KAAK,CAACY,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAvBR;;AA6BA,SACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACoB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAEpB,OAAO,CAACqB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCnB,KAAK,CAACoB,KAAxC,CADJ,EAEKnB,YAFL,CADJ;AAOH,CA5CD;;AA8CA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n               {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n       \r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}